--- a/net/minecraft/server/ProtoChunk.java
+++ b/net/minecraft/server/ProtoChunk.java
@@ -44,6 +44,7 @@
     private long s;
     private final Map<WorldGenStage.Features, BitSet> t;
     private boolean u;
+    public boolean needsDecoration; // CraftBukkit
 
     public ProtoChunk(int i, int j, ChunkConverter chunkconverter) {
         this(new ChunkCoordIntPair(i, j), chunkconverter);
@@ -64,26 +65,26 @@
         this.t = Maps.newHashMap();
         this.b = chunkcoordintpair;
         this.p = chunkconverter;
-        Predicate predicate = (block) -> {
+        Predicate<Block> predicate = (block) -> { // CraftBukkit - decompile error
             return block == null || block.getBlockData().isAir();
         };
         IRegistry iregistry = IRegistry.BLOCK;
 
         IRegistry.BLOCK.getClass();
         Function function = iregistry::getKey;
-        IRegistry iregistry1 = IRegistry.BLOCK;
+        IRegistry<Block> iregistry1 = IRegistry.BLOCK; // CraftBukkit - decompile error
 
         IRegistry.BLOCK.getClass();
-        this.q = new ProtoChunkTickList(predicate, function, iregistry1::getOrDefault, chunkcoordintpair);
-        predicate = (fluidtype) -> {
+        this.q = new ProtoChunkTickList<>(predicate, function, iregistry1::getOrDefault, chunkcoordintpair); // CraftBukkit - decompile error
+        Predicate<FluidType> predicate2 = (fluidtype) -> { // CraftBukkit - decompile error
             return fluidtype == null || fluidtype == FluidTypes.a;
         };
         iregistry = IRegistry.FLUID;
         IRegistry.FLUID.getClass();
         function = iregistry::getKey;
-        iregistry1 = IRegistry.FLUID;
+        IRegistry<FluidType> iregistry2 = IRegistry.FLUID; // CraftBukkit - decompile error
         IRegistry.FLUID.getClass();
-        this.r = new ProtoChunkTickList(predicate, function, iregistry1::getOrDefault, chunkcoordintpair);
+        this.r = new ProtoChunkTickList<>(predicate2, function, iregistry2::getOrDefault, chunkcoordintpair); // CraftBukkit - decompile error
     }
 
     public static ShortList a(ShortList[] ashortlist, int i) {
@@ -325,8 +326,8 @@
     }
 
     private HeightMap c(HeightMap.Type heightmap_type) {
-        return (HeightMap) this.f.computeIfAbsent(heightmap_type, (heightmap_type) -> {
-            HeightMap heightmap = new HeightMap(this, heightmap_type);
+        return (HeightMap) this.f.computeIfAbsent(heightmap_type, (heightmap_typex) -> { // CraftBukkit - decompile error
+            HeightMap heightmap = new HeightMap(this, heightmap_typex); // CraftBukkit - decompile error
 
             heightmap.a();
             return heightmap;
@@ -372,13 +373,13 @@
 
     @Nullable
     public LongSet b(String s) {
-        return (LongSet) this.o.computeIfAbsent(s, (s) -> {
+        return (LongSet) this.o.computeIfAbsent(s, (sx) -> { // CraftBukkit - decompile error
             return new LongOpenHashSet();
         });
     }
 
     public void a(String s, long i) {
-        ((LongSet) this.o.computeIfAbsent(s, (s) -> {
+        ((LongSet) this.o.computeIfAbsent(s, (sx) -> { // CraftBukkit - decompile error
             return new LongOpenHashSet();
         })).add(i);
         this.c = true;
@@ -493,7 +494,7 @@
     }
 
     public BitSet a(WorldGenStage.Features worldgenstage_features) {
-        return (BitSet) this.t.computeIfAbsent(worldgenstage_features, (worldgenstage_features) -> {
+        return (BitSet) this.t.computeIfAbsent(worldgenstage_features, (worldgenstage_featuresx) -> { // CraftBukkit - decompile error
             return new BitSet(65536);
         });
     }
