--- a/net/minecraft/server/RecipeFireworksStar.java
+++ b/net/minecraft/server/RecipeFireworksStar.java
@@ -8,12 +8,12 @@
 import java.util.Map;
 import java.util.function.Consumer;
 
-public class RecipeFireworksStar extends IRecipeComplex {
+public class RecipeFireworksStar extends ShapelessRecipes implements IRecipe { // CraftBukkit - added extends
 
     private static final RecipeItemStack a = RecipeItemStack.a(new IMaterial[] { Items.FIRE_CHARGE, Items.FEATHER, Items.GOLD_NUGGET, Items.SKELETON_SKULL, Items.WITHER_SKELETON_SKULL, Items.CREEPER_HEAD, Items.PLAYER_HEAD, Items.DRAGON_HEAD, Items.ZOMBIE_HEAD});
     private static final RecipeItemStack b = RecipeItemStack.a(new IMaterial[] { Items.DIAMOND});
     private static final RecipeItemStack c = RecipeItemStack.a(new IMaterial[] { Items.GLOWSTONE_DUST});
-    private static final Map<Item, ItemFireworks.EffectType> d = (Map) SystemUtils.a((Object) Maps.newHashMap(), (hashmap) -> {
+    private static final Map<Item, ItemFireworks.EffectType> d = (Map) SystemUtils.a(Maps.newHashMap(), (hashmap) -> { // CraftBukkit - decompile error
         hashmap.put(Items.FIRE_CHARGE, ItemFireworks.EffectType.LARGE_BALL);
         hashmap.put(Items.FEATHER, ItemFireworks.EffectType.BURST);
         hashmap.put(Items.GOLD_NUGGET, ItemFireworks.EffectType.STAR);
@@ -26,9 +26,11 @@
     });
     private static final RecipeItemStack e = RecipeItemStack.a(new IMaterial[] { Items.GUNPOWDER});
 
+    // CraftBukkit start - Delegate to new parent class with bogus info
     public RecipeFireworksStar(MinecraftKey minecraftkey) {
-        super(minecraftkey);
+        super(minecraftkey, "", new ItemStack(Items.FIREWORK_STAR, 0), NonNullList.a(RecipeItemStack.a, RecipeItemStack.a(Items.GUNPOWDER)));
     }
+    // CraftBukkit end
 
     public boolean a(IInventory iinventory, World world) {
         if (!(iinventory instanceof InventoryCrafting)) {
