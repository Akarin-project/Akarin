--- a/net/minecraft/server/UserCache.java
+++ b/net/minecraft/server/UserCache.java
@@ -46,7 +46,7 @@
     private static boolean c;
     private final Map<String, UserCache.UserCacheEntry> d = Maps.newHashMap();
     private final Map<UUID, UserCache.UserCacheEntry> e = Maps.newHashMap();
-    private final Deque<GameProfile> f = Lists.newLinkedList();
+    private final Deque<GameProfile> f = new java.util.concurrent.LinkedBlockingDeque<GameProfile>(); // CraftBukkit
     private final GameProfileRepository g;
     protected final Gson b;
     private final File h;
@@ -69,7 +69,7 @@
         this.h = file;
         GsonBuilder gsonbuilder = new GsonBuilder();
 
-        gsonbuilder.registerTypeHierarchyAdapter(UserCache.UserCacheEntry.class, new UserCache.BanEntrySerializer(null));
+        gsonbuilder.registerTypeHierarchyAdapter(UserCache.UserCacheEntry.class, new UserCache.BanEntrySerializer()); // CraftBukkit - decompile error
         this.b = gsonbuilder.create();
         this.b();
     }
@@ -120,7 +120,7 @@
             date = calendar.getTime();
         }
 
-        UserCache.UserCacheEntry usercache_usercacheentry = new UserCache.UserCacheEntry(gameprofile, date, null);
+        UserCache.UserCacheEntry usercache_usercacheentry = new UserCache.UserCacheEntry(gameprofile, date); // CraftBukkit - decompile error
 
         if (this.e.containsKey(uuid)) {
             UserCache.UserCacheEntry usercache_usercacheentry1 = (UserCache.UserCacheEntry) this.e.get(uuid);
@@ -314,7 +314,7 @@
                             return null;
                         }
 
-                        return UserCache.this.new UserCacheEntry(new GameProfile(uuid, s1), date, null);
+                        return UserCache.this.new UserCacheEntry(new GameProfile(uuid, s1), date); // CraftBukkit - decompile error
                     } else {
                         return null;
                     }
