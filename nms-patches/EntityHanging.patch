--- a/net/minecraft/server/EntityHanging.java
+++ b/net/minecraft/server/EntityHanging.java
@@ -4,6 +4,11 @@
 import javax.annotation.Nullable;
 import org.apache.commons.lang3.Validate;
 
+// CraftBukkit start
+import org.bukkit.entity.Hanging;
+import org.bukkit.event.hanging.HangingBreakEvent;
+// CraftBukkit end
+
 public abstract class EntityHanging extends Entity {
 
     private static final Predicate<Entity> c = new Predicate() {
@@ -41,39 +46,44 @@
         this.updateBoundingBox();
     }
 
-    protected void updateBoundingBox() {
-        if (this.direction != null) {
-            double d0 = (double) this.blockPosition.getX() + 0.5D;
-            double d1 = (double) this.blockPosition.getY() + 0.5D;
-            double d2 = (double) this.blockPosition.getZ() + 0.5D;
-            double d3 = 0.46875D;
-            double d4 = this.a(this.getWidth());
-            double d5 = this.a(this.getHeight());
-
-            d0 -= (double) this.direction.getAdjacentX() * 0.46875D;
-            d2 -= (double) this.direction.getAdjacentZ() * 0.46875D;
-            d1 += d5;
-            EnumDirection enumdirection = this.direction.f();
+    // CraftBukkit start - break out BB calc into own method
+    public static AxisAlignedBB calculateBoundingBox(Entity entity, BlockPosition blockPosition, EnumDirection direction, int width, int height) {
+        double d0 = (double) blockPosition.getX() + 0.5D;
+        double d1 = (double) blockPosition.getY() + 0.5D;
+        double d2 = (double) blockPosition.getZ() + 0.5D;
+        double d3 = 0.46875D;
+        double d4 = width;
+        double d5 = height;
+
+        d0 -= (double) direction.getAdjacentX() * 0.46875D;
+        d2 -= (double) direction.getAdjacentZ() * 0.46875D;
+        d1 += d5;
+        EnumDirection enumdirection = direction.f();
+
+        d0 += d4 * (double) enumdirection.getAdjacentX();
+        d2 += d4 * (double) enumdirection.getAdjacentZ();
+
+        double d6 = (double) width;
+        double d7 = (double) height;
+        double d8 = (double) width;
 
-            d0 += d4 * (double) enumdirection.getAdjacentX();
-            d2 += d4 * (double) enumdirection.getAdjacentZ();
-            this.locX = d0;
-            this.locY = d1;
-            this.locZ = d2;
-            double d6 = (double) this.getWidth();
-            double d7 = (double) this.getHeight();
-            double d8 = (double) this.getWidth();
-
-            if (this.direction.k() == EnumDirection.EnumAxis.Z) {
-                d8 = 1.0D;
-            } else {
-                d6 = 1.0D;
-            }
+        if (direction.k() == EnumDirection.EnumAxis.Z) {
+            d8 = 1.0D;
+        } else {
+            d6 = 1.0D;
+        }
 
-            d6 /= 32.0D;
-            d7 /= 32.0D;
-            d8 /= 32.0D;
-            this.a(new AxisAlignedBB(d0 - d6, d1 - d7, d2 - d8, d0 + d6, d1 + d7, d2 + d8));
+        d6 /= 32.0D;
+        d7 /= 32.0D;
+        d8 /= 32.0D;
+        return new AxisAlignedBB(d0 - d6, d1 - d7, d2 - d8, d0 + d6, d1 + d7, d2 + d8);
+    }
+
+    protected void updateBoundingBox() {
+        if (this.direction != null) {
+            // CraftBukkit start code moved in to calculateBoundingBox
+            this.a(calculateBoundingBox(this, this.blockPosition, this.direction, this.getWidth(), this.getHeight()));
+            // CraftBukkit end
         }
     }
 
@@ -88,6 +98,24 @@
         if (this.d++ == 100 && !this.world.isClientSide) {
             this.d = 0;
             if (!this.dead && !this.survives()) {
+                // CraftBukkit start - fire break events
+                Material material = this.world.getType(new BlockPosition(this)).getMaterial();
+                HangingBreakEvent.RemoveCause cause;
+
+                if (!material.equals(Material.AIR)) {
+                    // TODO: This feels insufficient to catch 100% of suffocation cases
+                    cause = HangingBreakEvent.RemoveCause.OBSTRUCTION;
+                } else {
+                    cause = HangingBreakEvent.RemoveCause.PHYSICS;
+                }
+
+                HangingBreakEvent event = new HangingBreakEvent((Hanging) this.getBukkitEntity(), cause);
+                this.world.getServer().getPluginManager().callEvent(event);
+
+                if (dead || event.isCancelled()) {
+                    return;
+                }
+                // CraftBukkit end
                 this.die();
                 this.a((Entity) null);
             }
@@ -140,6 +168,21 @@
             return false;
         } else {
             if (!this.dead && !this.world.isClientSide) {
+                // CraftBukkit start - fire break events
+                HangingBreakEvent event = new HangingBreakEvent((Hanging) this.getBukkitEntity(), HangingBreakEvent.RemoveCause.DEFAULT);
+                if (damagesource.getEntity() != null) {
+                    event = new org.bukkit.event.hanging.HangingBreakByEntityEvent((Hanging) this.getBukkitEntity(), damagesource.getEntity() == null ? null : damagesource.getEntity().getBukkitEntity());
+                } else if (damagesource.isExplosion()) {
+                    event = new HangingBreakEvent((Hanging) this.getBukkitEntity(), HangingBreakEvent.RemoveCause.EXPLOSION);
+                }
+
+                this.world.getServer().getPluginManager().callEvent(event);
+
+                if (this.dead || event.isCancelled()) {
+                    return true;
+                }
+                // CraftBukkit end
+
                 this.die();
                 this.ap();
                 this.a(damagesource.getEntity());
@@ -151,6 +194,18 @@
 
     public void move(double d0, double d1, double d2) {
         if (!this.world.isClientSide && !this.dead && d0 * d0 + d1 * d1 + d2 * d2 > 0.0D) {
+            if (this.dead) return; // CraftBukkit
+
+            // CraftBukkit start - fire break events
+            // TODO - Does this need its own cause? Seems to only be triggered by pistons
+            HangingBreakEvent event = new HangingBreakEvent((Hanging) this.getBukkitEntity(), HangingBreakEvent.RemoveCause.PHYSICS);
+            this.world.getServer().getPluginManager().callEvent(event);
+
+            if (this.dead || event.isCancelled()) {
+                return;
+            }
+            // CraftBukkit end
+
             this.die();
             this.a((Entity) null);
         }
@@ -158,7 +213,7 @@
     }
 
     public void g(double d0, double d1, double d2) {
-        if (!this.world.isClientSide && !this.dead && d0 * d0 + d1 * d1 + d2 * d2 > 0.0D) {
+        if (false && !this.world.isClientSide && !this.dead && d0 * d0 + d1 * d1 + d2 * d2 > 0.0D) { // CraftBukkit - not needed
             this.die();
             this.a((Entity) null);
         }
