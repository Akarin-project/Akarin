--- a/net/minecraft/server/ContainerPlayer.java
+++ b/net/minecraft/server/ContainerPlayer.java
@@ -1,5 +1,10 @@
 package net.minecraft.server;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.inventory.CraftInventoryCrafting;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+// CraftBukkit end
+
 public class ContainerPlayer extends Container {
 
     private static final EnumItemSlot[] h = new EnumItemSlot[] { EnumItemSlot.HEAD, EnumItemSlot.CHEST, EnumItemSlot.LEGS, EnumItemSlot.FEET};
@@ -7,10 +12,20 @@
     public IInventory resultInventory = new InventoryCraftResult();
     public boolean g;
     private final EntityHuman owner;
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private PlayerInventory player;
+    // CraftBukkit end
 
     public ContainerPlayer(final PlayerInventory playerinventory, boolean flag, EntityHuman entityhuman) {
         this.g = flag;
         this.owner = entityhuman;
+        // CraftBukkit start
+        this.resultInventory = new InventoryCraftResult(); // CraftBukkit - moved to before InventoryCrafting construction
+        this.craftInventory = new InventoryCrafting(this, 2, 2, playerinventory.player); // CraftBukkit - pass player
+        this.craftInventory.resultInventory = this.resultInventory; // CraftBukkit - let InventoryCrafting know about its result slot
+        this.player = playerinventory; // CraftBukkit - save player
+        // CraftBukkit end
         this.a((Slot) (new SlotResult(playerinventory.player, this.craftInventory, this.resultInventory, 0, 154, 28)));
 
         int i;
@@ -23,7 +38,7 @@
         }
 
         for (i = 0; i < 4; ++i) {
-            final EnumItemSlot enumitemslot = ContainerPlayer.h[i];
+            final EnumItemSlot enumitemslot1 = ContainerPlayer.h[i];
 
             this.a(new Slot(playerinventory, 36 + (3 - i), 8, 8 + i * 18) {
                 public int getMaxStackSize() {
@@ -31,7 +46,7 @@
                 }
 
                 public boolean isAllowed(ItemStack itemstack) {
-                    return enumitemslot == EntityInsentient.d(itemstack);
+                    return enumitemslot1 == EntityInsentient.d(itemstack); // CraftBukkit - decompile error
                 }
 
                 public boolean isAllowed(EntityHuman entityhuman) {
@@ -54,11 +69,22 @@
 
         this.a(new Slot(playerinventory, 40, 77, 62) {
         });
-        this.a((IInventory) this.craftInventory);
+        // this.a((IInventory) this.craftInventory); // CraftBukkit - unneeded since it just sets result slot to empty
     }
 
     public void a(IInventory iinventory) {
-        this.resultInventory.setItem(0, CraftingManager.getInstance().craft(this.craftInventory, this.owner.world));
+        // this.resultInventory.setItem(0, CraftingManager.getInstance().craft(this.craftInventory, this.owner.world));
+        // CraftBukkit start (Note: the following line would cause an error if called during construction)
+        CraftingManager.getInstance().lastCraftView = getBukkitView();
+        ItemStack craftResult = CraftingManager.getInstance().craft(this.craftInventory, this.owner.world);
+        this.resultInventory.setItem(0, craftResult);
+        if (super.listeners.size() < 1) {
+            return;
+        }
+
+        EntityPlayer player = (EntityPlayer) super.listeners.get(0); // TODO: Is this _always_ correct? Seems like it.
+        player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.activeContainer.windowId, 0, craftResult));
+        // CraftBukkit end
     }
 
     public void b(EntityHuman entityhuman) {
@@ -148,4 +174,17 @@
     public boolean a(ItemStack itemstack, Slot slot) {
         return slot.inventory != this.resultInventory && super.a(itemstack, slot);
     }
+
+    // CraftBukkit start
+    @Override
+    public CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        CraftInventoryCrafting inventory = new CraftInventoryCrafting(this.craftInventory, this.resultInventory);
+        bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
 }
